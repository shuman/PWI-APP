{"version":3,"sources":["country-start.js"],"names":[],"mappingsfile":"country-start.js","sourcesContent":["$(function( ){\n    \n    $chartColorArray = [\"#eeaef4\", \"#f1657f\", \"#f4b533\", \"#dA4a4a\", \"#e4272d\", \"#6e33f4\", \"#3375f4\", \"#f433dc\", \"#33f4a6\", \"#42da5e\", \"#ff0000\", \"#fff000\", \"#ffff00\", \"#ee00000\", \"#eeee00\"];\n    \n    setHeight( );\n    \n    /* Trigger Country Causes to Toggle */\n    \n    $(\".countryCauseName\").on(\"click\", function( ){\n        \n        var cause = $(this).data(\"cause\");\n        \n        $(\".countryCauseName\").removeClass(\"active\");\n        \n        $(this).addClass(\"active\");\n        \n        $(\".country-cause-description\").addClass(\"hidden\");\n        \n        $(\".\" + cause + \"-description\").removeClass(\"hidden\");\n        \n    });\n\n    var chartSize = parseInt( $(\".charts\").width( ) * .95 );\n\n    $(\".charts\").find(\"canvas\").css({\n        width: chartSize + \"px\",\n        height: chartSize + \"px\"\n    });\n\n    $(window).on(\"resize\", function( ){\n\n        var chartSize = parseInt( $(\".charts\").width( ) * .95 );\n\n        $(\".charts\").find(\"canvas\").css({\n            width: chartSize + \"px\",\n            height: chartSize + \"px\"\n        });\n    });\n    \n    /* End Country Causes to Toggle */\n    \n    /* Start Country Map Script */\n\n    if( $(\"input[name=latitude]\").length > 0 ){\n    \n        var bounds = new google.maps.LatLngBounds( );\n        var map;\n        \n        var initialZoom = 0;\n        var zoomFactor = 3;\n        \n        var lat = $(\"input[name=latitude]\").val( );\n        var lng = $(\"input[name=longitude]\").val( );\n        \n        var mapCanvas = document.getElementById('map');\n        \n        var mapOptions = {\n            zoom: 3,\n            center: new google.maps.LatLng( lat, lng),\n            myTypeid: google.maps.MapTypeId.ROADMAP,\n            styles: styles,\n            animatedZoom: true,\n            disableDefaultUI: true\n        };\n        \n        map = new google.maps.Map(mapCanvas, mapOptions);\n\n        var myLatLng = {lat: parseFloat( lat ), lng: parseFloat( lng )};\n\n        var marker = new google.maps.Marker({\n                        position: myLatLng,\n                        map: map,\n                        animation: google.maps.Animation.DROP,\n                    });\n    }\n    \n    /* End Country Map Script */\n    \n    /* Start Country Chart Script */\n    \n    $(\".charts\").each( function( i ){\n        \n        var chartData = [];\n        \n        var names = $(this).find(\"input[name='item_name[]']\");\n        \n        var percentage = $(this).find(\"input[name='item_percentage[]']\");\n        \n        var showChart = true;\n        \n        for( var i = 0 ; i < names.length ; i++ ){\n            \n            if( isNaN( parseFloat( $(percentage[i]).val( ) ) ) ){\n\t            showChart = false;\n            }\n            \n            chartData.push({\n                'label': $(names[i]).val( ),\n                'value': parseFloat( $(percentage[i]).val( ) ),\n                'color': $chartColorArray[i],\n                'highlight': $chartColorArray[i]\n            });\n        }\n        \n        if( showChart ){\n        \n\t        var $ctx = $(this).find(\"canvas\");\n\t            \n\t        var PieChart = new Chart( $ctx[0].getContext(\"2d\") ).Pie(\n\t            chartData,{\n\t             legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"   \n\t        });\n\t        \n\t\t\tvar legend = PieChart.generateLegend( );\n\t        $(this).find(\".chart-legend\").html( legend );\n\t    }else{\n\t\t    $(this).hide( );\n\t    }\n    });\n    \n    /* End Country Chart Script */\n    \n    \n    /*\n    *\n    * Begin Checkout Process for Current Country\n    *\n    */\n    \n\tvar $checkout    = $(\"#countryCheckout\");\n    var $container   = $checkout.find(\".checkout\");\n    var $donation    = $container.find(\".donation\");\n\n    var country_alis = \"\";\n    \n    //Action for triggering the country donation lightbox\n    $(\".donate-button\").on({\n        mouseover: function( ){\n            $(this).css('cursor','pointer');\n        },\n        mouseleave: function( ){\n            $(this).css('cursor', 'auto');    \n        },\n        click: function( ){\n\n            country_alias = $(this).data('alias');\n            \n            $checkout.css(\"display\",\"table\");\n        }\n    });\n    \n    //Close out country checkout\n    $(\".exit-country-checkout\").on({\n        \n        mouseover: function( ){\n            $(this).css('cursor', 'pointer');\n        },\n        mouseleave: function( ){\n            $(this).css('cursor', 'auto');\n        },\n        click: function( ){\n        \n           //clear any selected incentive\n            $donation.find(\"input\").val( \"\" );\n            \n            //clear all form fields on the checkout page\n            $(\"form[name=donationCheckoutForm]\")[0].reset( );\n\n            $checkout.hide( );\n\n             //$('.fund-project').prop('disabled', 'false');\n        }\n    });\n    \n    /*\n    *\n    * Step 1 ( Donation Amount / Login ) actions \n    *\n    */\n    \n    $donation.find(\".continue\").on(\"click\", function( ){\n        \n        var amount = $donation.find(\"input[name=donationAmt]\").val( );\n        \n        var hasErrors = false;\n        \n        if( isNaN( parseInt( amount ) ) || isNaN( parseFloat( amount  ) ) ){\n           hasErrors = true;\n        }\n\n        if( ! hasErrors ){\n            \n            $.ajax({\n                url: \"/storeDonation\",\n                method: \"POST\",\n                data: {amount: parseFloat(amount.replace(\",\",\"\")).formatMoney(2, ',', '.'), type: \"country\"},\n                dataType: \"json\",\n                success: function( resp ){\n                    location.href = '/country/' + country_alias + '/donation';\n                }\n            });\n        }\n    });\n});"],"sourceRoot":"/source/"}